<?xml version="1.0" encoding="utf-8" ?>
<Defs>
  
  <!--======= Hoverjet =======-->
  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IW_Hoverjet</defName>
    <label>hoverjet</label>
    <description>Built-in hoverjet, allowing to effortlessly glide above traps and even the harshest terrain.</description>
    <isBad>false</isBad>
    <everCurableByItem>false</everCurableByItem>
    <scenarioCanAdd>false</scenarioCanAdd>
    <initialSeverity>1</initialSeverity>
    <defaultInstallPart>IM_HoverThorax</defaultInstallPart>
    <keepOnBodyPartRestoration>true</keepOnBodyPartRestoration>
    <comps>
      <li Class="EBSGFramework.HediffCompProperties_TerrainCostOverride">
        <universalCostOverride>0</universalCostOverride>    
      </li>
    </comps>
    <stages>
      <li>
        <statFactors>
          <TrapSpringChance>0</TrapSpringChance>
        </statFactors>
      </li>
    </stages>
  </HediffDef>
  
  <!--======= RipperToxin =======-->
  
  <!-- Hediff -->
  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IW_RipperToxin</defName>
    <label>ripper toxin</label>
    <description>Mechanite toxin coursing through the body. Using the victim as an impromptu mech gestator, it dissolves the host for materials, continously damaging them. Should the gestation finish or the victim die near its completion, a freshly formed ripperling will cut its way out of the host to join the fray.\n\nBeing a toxin, its buildup can be resisted with certain genes and implants.</description>
    <scenarioCanAdd>false</scenarioCanAdd>
    <maxSeverity>1</maxSeverity>
    <comps>
      <li Class="HediffCompProperties_SeverityPerDay">
        <severityPerDay>6</severityPerDay>
      </li>
      <li Class="HediffCompProperties_Disappears">
        <disappearsAfterTicks>2500</disappearsAfterTicks>
        <showRemainingTime>true</showRemainingTime>
      </li>
      <li Class="HediffCompProperties_DisappearsOnDeath" />
      <li Class="EBSGFramework.HediffCompProperties_DisplaySeverity">
        <postFactor>100</postFactor>
        <prependString>Gestation progress : </prependString>
        <appendString>% complete</appendString>
        <roundDigits>0</roundDigits>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_RemoveAtSeverities">
        <severity>0.999</severity>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_DamageOnRemoval">
        <damage>Cut</damage>
        <amount>25</amount>
        <minHealthRemaining>1</minHealthRemaining>
        <severity>0.8</severity>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_SpawnPawnKindOnRemoval">
        <pawnKind>IM_Mech_Ripperling</pawnKind>
        <stage>Newborn</stage>
        <effecter>IM_RipperlingEmerge</effecter>
        <validSeverity>0.8</validSeverity>
        <inCreatorFaction>True</inCreatorFaction>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_DamageOverTime">
        <damage>IW_RipperToxin</damage>
        <tickInterval>120</tickInterval>
        <damageAmount>1</damageAmount>
        <armorPenetration>2</armorPenetration>
        <createFilth>False</createFilth>
      </li>
    </comps>
  </HediffDef>

  <!-- Effects -->
  <FleckDef ParentName="FleckBase_Thrown">
    <defName>IM_BloodChurnNoise</defName>
    <graphicData>
      <texPath>Things/Mote/WaterChurnNoise</texPath>
      <renderInstanced>true</renderInstanced>
      <shaderParameters>
        <_Color2>(0.8, 0, 0, 0.5)</_Color2>
      </shaderParameters>
    </graphicData>
    <altitudeLayer>MoteOverhead</altitudeLayer>
    <fadeInTime>0.1</fadeInTime>
    <solidTime>0.6</solidTime>
    <fadeOutTime>0.3</fadeOutTime>
  </FleckDef>

  <EffecterDef>
    <defName>IM_RipperlingEmerge</defName>
    <maintainTicks>60</maintainTicks>
    <children>
      <li>
        <subEffecterClass>SubEffecter_SoundTriggered</subEffecterClass>
        <soundDef>IM_RipperlingCutOut</soundDef>
      </li>
      <li>
        <subEffecterClass>SubEffecter_SprayerChance</subEffecterClass>
        <chancePeriodTicks>5</chancePeriodTicks>
        <lifespanMaxTicks>15</lifespanMaxTicks>
        <chancePerTick>0.7</chancePerTick>
        <fleckDef>BloodSplash</fleckDef>
        <burstCount>2~3</burstCount>
        <spawnLocType>OnSource</spawnLocType>
        <positionRadius>0</positionRadius>
        <positionOffset>(0, 0, 0)</positionOffset>
        <scale>0.8~1.2</scale>
        <absoluteAngle>True</absoluteAngle>
        <rotationRate>0</rotationRate>
        <rotation>0</rotation>
        <speed>0</speed>
      </li>
      <li>
        <subEffecterClass>SubEffecter_SprayerTriggered</subEffecterClass>
        <fleckDef>IM_BloodChurnNoise</fleckDef>
        <burstCount>10~12</burstCount>
        <spawnLocType>OnSource</spawnLocType>
        <positionRadius>.5</positionRadius>
        <positionOffset>(0, 0, 0)</positionOffset>
        <scale>0.4~0.6</scale>
        <angle>0~360</angle>
        <fleckUsesAngleForVelocity>True</fleckUsesAngleForVelocity>
        <absoluteAngle>false</absoluteAngle>
        <rotationRate>30~50</rotationRate>
        <rotation>0</rotation>
        <speed>-3~3</speed>
      </li>
    </children>
  </EffecterDef>

  <!--======= ZealDrive =======-->
  
  <!-- Hediff -->
  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_ZealDrive</defName>
    <label>zeal drive</label>
    <description>Specialized programming adjusting aim by extrapolating target movement based on recent combat data. Growing in intensity with every shot and melee attack, it gradually increases melee and ranged accuracy.</description>
    <isBad>false</isBad>
    <scenarioCanAdd>false</scenarioCanAdd>
    <everCurableByItem>false</everCurableByItem>
    <initialSeverity>0.001</initialSeverity>
    <minSeverity>0.001</minSeverity>
    <maxSeverity>1</maxSeverity>
    <defaultInstallPart>ArtificialBrain</defaultInstallPart>
    <keepOnBodyPartRestoration>true</keepOnBodyPartRestoration>
    <comps>
      <li Class="EBSGFramework.HediffCompProperties_SeverityChangePerAttack">
        <changePerRangedAttack>0.02</changePerRangedAttack>
        <changePerMeleeAttack>0.2</changePerMeleeAttack>
      </li>
      <li Class="HediffCompProperties_SeverityPerDay">
        <severityPerDay>-6</severityPerDay>
      </li>
      <li MayRequire="Ludeon.RimWorld.Biotech" Class="EBSGFramework.HediffCompProperties_AttachMote"> <!-- Necessary due to MoteGlowParentRotation being exclusive to Biotech -->
        <moteDef>IM_ZealDriveGlow</moteDef>
        <color>(0.8, 0, 0)</color>
        <brightnessBySeverity>true</brightnessBySeverity>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_DisplaySeverity">
        <postFactor>100</postFactor>
        <prependString>Intensity : </prependString>
        <appendString>%</appendString>
        <roundDigits>0</roundDigits>
      </li>
    </comps>
    <stages>
      <li>
        <label>dormant</label>
        <minSeverity>0.001</minSeverity>
      </li>
      <li>
        <minSeverity>0.15</minSeverity>
        <statFactors>
          <MeleeHitChance>1.2</MeleeHitChance>
          <ShootingAccuracyPawn>1.2</ShootingAccuracyPawn>
        </statFactors>
      </li>
      <li>
        <minSeverity>0.35</minSeverity>
        <statFactors>
          <MeleeHitChance>1.4</MeleeHitChance>
          <ShootingAccuracyPawn>1.4</ShootingAccuracyPawn>
        </statFactors>
      </li>
      <li>
        <minSeverity>0.6</minSeverity>
        <statFactors>
          <MeleeHitChance>1.6</MeleeHitChance>
          <ShootingAccuracyPawn>1.6</ShootingAccuracyPawn>
        </statFactors>
      </li>
      <li>
        <minSeverity>0.9</minSeverity>
        <statFactors>
          <MeleeHitChance>1.8</MeleeHitChance>
          <ShootingAccuracyPawn>1.8</ShootingAccuracyPawn>
        </statFactors>
      </li>
    </stages>
  </HediffDef>

  <!-- Effects -->
  <ThingDef MayRequire="Ludeon.RimWorld.Biotech" ParentName="MoteBase">
    <defName>IM_ZealDriveGlow</defName>
    <thingClass>MoteAttached</thingClass>
    <altitudeLayer>MoteOverhead</altitudeLayer>
    <mote>
      <fadeInTime>0.8</fadeInTime>
      <solidTime>0.3</solidTime>
      <fadeOutTime>0.8</fadeOutTime>
    </mote>
    <graphicData>
      <graphicClass>Graphic_MoteWithParentRotation</graphicClass>
      <texPath>Things/Mote/Templar_HeadGlow</texPath>
      <shaderType>MoteGlowParentRotation</shaderType>
      <drawSize>(2.2, 2.2)</drawSize>
    </graphicData>
  </ThingDef>

  <!--======= RageDrive =======-->
  
  <!-- Hediff -->
  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_RageDrive</defName>
    <label>rage drive</label>
    <description>Specialized programming overdriving mechanoid subsystems in response to danger. Growing in intensity proportionally to suffered damage, it gradually increases movement speed, melee damage and melee attack speed.\n\nProne to overstressing the system during high actity levels, potentially causing berserk-inducing malfunctions.</description>
    <isBad>false</isBad>
    <scenarioCanAdd>false</scenarioCanAdd>
    <everCurableByItem>false</everCurableByItem>
    <initialSeverity>0.001</initialSeverity>
    <minSeverity>0.001</minSeverity>
    <maxSeverity>1</maxSeverity>
    <defaultInstallPart>ArtificialBrain</defaultInstallPart>
    <keepOnBodyPartRestoration>true</keepOnBodyPartRestoration>
    <comps>
      <li Class="EBSGFramework.HediffCompProperties_SeverityChangeWhenDamaged">
        <severityChangeFactor>0.0125</severityChangeFactor>
      </li>
      <li Class="HediffCompProperties_SeverityPerDay">
        <severityPerDay>-8</severityPerDay>
      </li>
      <li MayRequire="Ludeon.RimWorld.Biotech" Class="EBSGFramework.HediffCompProperties_AttachMote"> <!-- Necessary due to MoteGlowParentRotation being exclusive to Biotech -->
        <moteDef>IM_RageDriveGlow</moteDef>
        <color>(0.8, 0, 0)</color>
        <brightnessBySeverity>true</brightnessBySeverity>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_DisplaySeverity">
        <postFactor>100</postFactor>
        <prependString>Intensity : </prependString>
        <appendString>%</appendString>
        <roundDigits>0</roundDigits>
      </li>
    </comps>
    <stages>
      <li>
        <label>dormant</label>
        <minSeverity>0.001</minSeverity>
      </li>
      <li>
        <minSeverity>0.15</minSeverity>
        <statOffsets>
          <MoveSpeed>0.7</MoveSpeed>
        </statOffsets>
        <statFactors>
          <MeleeDamageFactor>1.1</MeleeDamageFactor>
          <StaggerDurationFactor>0.75</StaggerDurationFactor>
        </statFactors>
      </li>
      <li>
        <minSeverity>0.35</minSeverity>
        <statOffsets>
          <MoveSpeed>1.2</MoveSpeed>
        </statOffsets>
        <statFactors>
          <MeleeCooldownFactor>0.90</MeleeCooldownFactor>
          <MeleeDamageFactor>1.25</MeleeDamageFactor>
          <StaggerDurationFactor>0.5</StaggerDurationFactor>
        </statFactors>
      </li>
      <li>
        <minSeverity>0.6</minSeverity>
        <statOffsets>
          <MoveSpeed>1.6</MoveSpeed>
        </statOffsets>
        <statFactors>
          <MeleeCooldownFactor>0.80</MeleeCooldownFactor>
          <MeleeDamageFactor>1.4</MeleeDamageFactor>
          <StaggerDurationFactor>0.25</StaggerDurationFactor>
        </statFactors>
        <mentalStateGivers>
          <li>
            <mentalState>BerserkMechanoid</mentalState>
            <mtbDays>2.1</mtbDays>
          </li>
        </mentalStateGivers>
      </li>
      <li>
        <minSeverity>0.9</minSeverity>
        <statOffsets>
          <MoveSpeed>2</MoveSpeed>
        </statOffsets>
        <statFactors>
          <MeleeCooldownFactor>0.7</MeleeCooldownFactor>
          <MeleeDamageFactor>1.6</MeleeDamageFactor>
          <StaggerDurationFactor>0</StaggerDurationFactor>
        </statFactors>
        <mentalStateGivers>
          <li>
            <mentalState>BerserkMechanoid</mentalState>
            <mtbDays>0.7</mtbDays>
          </li>
        </mentalStateGivers>
      </li>
    </stages>
  </HediffDef>

  <!-- Effects -->
  <ThingDef MayRequire="Ludeon.RimWorld.Biotech" ParentName="MoteBase">
    <defName>IM_RageDriveGlow</defName>
    <thingClass>MoteAttached</thingClass>
    <altitudeLayer>MoteOverhead</altitudeLayer>
    <mote>
      <fadeInTime>0.8</fadeInTime>
      <solidTime>0.3</solidTime>
      <fadeOutTime>0.8</fadeOutTime>
    </mote>
    <graphicData>
      <graphicClass>Graphic_MoteWithParentRotation</graphicClass>
      <texPath>Things/Mote/Berserker_HeadGlow</texPath>
      <shaderType>MoteGlowParentRotation</shaderType>
      <drawSize>(2.5, 2.5)</drawSize>
    </graphicData>
  </ThingDef>

  <!--======= Infiltrator =======-->
  
  <!--== Hediff ==-->
  
  <!-- Main Hediff -->
  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IW_Infiltrator</defName>
    <label>undercover infiltrator</label>
    <description>This "person" is in truth a mechanoid hiding behind a facade. It will bide its time until either its disguise gets too damaged, or it judges the moment right to reveal itself.\n\nEven when disguised like this, it should remain vulnurable to EMP shocks - perhaps you can use this against it.</description>
    <everCurableByItem>false</everCurableByItem>
    <scenarioCanAdd>false</scenarioCanAdd>
    <maxSeverity>1</maxSeverity>
    <comps>
      <li Class="EBSGFramework.HediffCompProperties_DestroyOnDeath"/>
      <li Class="HediffCompProperties_SurgeryInspectable">
        <surgicalDetectionDesc>{PAWN_nameDef} is not human - {PAWN_pronoun} is a mechanoid infiltrator hiding behind a bio-mimetic disguise. Deal with {PAWN_objective} however you can before {PAWN_pronoun} discovers {PAWN_pronoun} has been found out and sheds {PAWN_objective} disguise to attack your colony!</surgicalDetectionDesc>
      </li>
      <li Class="HediffCompProperties_Disappears">
        <disappearsAfterTicks>90000~420000</disappearsAfterTicks>
        <showRemainingTime>false</showRemainingTime>
      </li>
      <li Class="HediffCompProperties_ReactOnDamage">
        <damageDefIncoming>EMP</damageDefIncoming>
        <createHediff>IM_InfiltratorBrainShock</createHediff>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_SpawnPawnKindOnRemoval">
        <pawnKind>IM_Mech_Infiltrator</pawnKind>
        <inCreatorFaction>false</inCreatorFaction>
        <hediffOnPawns>IM_Unmasked</hediffOnPawns>
        <effecter>IM_DisguiseDisintegration</effecter>
        <spawnEffecter>IM_InfiltratorReveal</spawnEffecter>
        <attachEffecterToPawn>true</attachEffecterToPawn>
        <activation>OnDeathOnly</activation>
      </li>
      <li Class="HediffCompProperties_DisappearsOnDeath" />
      <li Class="EBSGFramework.HediffCompProperties_PreventDeathNotifications"/>
      <li Class="EBSGFramework.HediffCompProperties_HediffsOnRemoval">
        <hediffsToGive>
          <li>
            <hediffDef>IM_ShedDisguise</hediffDef>
          </li>
        </hediffsToGive>
      </li>
      <li Class="HediffCompProperties_RemoveIfOtherHediff">
        <hediffs>
          <li>IM_DeactivatedInfiltrator</li>
        </hediffs>
      </li>
      <li Class="HediffCompProperties_Effecter">
        <stateEffecter>IM_RadioWaves</stateEffecter>
      </li>
    </comps>
    <stages>
      <li>
        <becomeVisible>false</becomeVisible>
        <makeImmuneTo>
          <li>Flu</li>
          <li>Malaria</li>
          <li>SleepingSickness</li>
          <li>Plague</li>
          <li>WoundInfection</li>
          <li>LungRot</li>
          <li>GutWorms</li>
          <li>MuscleParasites</li>
          <li>OrganDecay</li>
        </makeImmuneTo>
        <hungerRateFactor>0.1</hungerRateFactor>
        <foodPoisoningChanceFactor>0</foodPoisoningChanceFactor>
        <opinionOfOthersFactor>0</opinionOfOthersFactor>
      </li>
    </stages>
  </HediffDef>

  <!-- Infiltrator Hediffs -->
  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_ShedDisguise</defName>
    <label>shed disguise</label>
    <description>You shouldn't be able to read this.</description>
    <isBad>false</isBad>
    <everCurableByItem>false</everCurableByItem>
    <scenarioCanAdd>false</scenarioCanAdd>
    <initialSeverity>1</initialSeverity>
    <lethalSeverity>1</lethalSeverity>
    <tendable>false</tendable>
    <comps>
      <li Class="HediffCompProperties_Discoverable">
        <sendLetterWhenDiscovered>true</sendLetterWhenDiscovered>
        <discoverLetterLabel>Infiltrator Revealed</discoverLetterLabel>
        <discoverLetterText>{PAWN_nameDef} has revealed {PAWN_objective}self to be a mechanoid infiltrator - intent on destroying your colony from within! It will try to destroy your base and hunt down any colonist it can find.</discoverLetterText>
        <letterType>ThreatSmall</letterType>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_SpawnPawnKindOnRemoval">
        <pawnKind>IM_Mech_Infiltrator</pawnKind>
        <inCreatorFaction>false</inCreatorFaction>
        <hediffOnPawns>IM_Unmasked</hediffOnPawns>
        <effecter>IM_DisguiseDisintegration</effecter>
        <spawnEffecter>IM_InfiltratorReveal</spawnEffecter>
        <attachEffecterToPawn>true</attachEffecterToPawn>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_DestroyOnDeath"/>
      <li Class="HediffCompProperties_DisappearsOnDeath"/>
      <li Class="EBSGFramework.HediffCompProperties_PreventDeathNotifications"/>
    </comps>
  </HediffDef>

  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_Unmasked</defName>
    <label>unmasked</label>
    <description>You shouldn't be able to read this outside devmode.</description>
    <isBad>false</isBad>
    <everCurableByItem>false</everCurableByItem>
    <scenarioCanAdd>false</scenarioCanAdd>
    <initialSeverity>1</initialSeverity>
    <comps>
      <li Class="HediffCompProperties_DisappearsOnDeath"/> <!-- Should prevent weird thinktree interactions post-resurrection (e.g. via Apocriton) -->
      <li Class="EL_IM.HediffCompProperties_GiveHediffReactiveCloak">
        <hediffDef>IM_ReactiveCloak</hediffDef>
        <skipIfAlreadyExists>true</skipIfAlreadyExists>
      </li>
    </comps>
    <stages>
      <li>
        <becomeVisible>false</becomeVisible>
      </li>
    </stages>
  </HediffDef>

  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_ReactiveCloak</defName>
    <label>reactive cloak</label>
    <description>A short-lived optical cloak activated in response to an infiltrator shedding its biomimetic disguise.</description>
    <isBad>false</isBad>
    <everCurableByItem>false</everCurableByItem>
    <scenarioCanAdd>false</scenarioCanAdd>
    <initialSeverity>1</initialSeverity>
    <comps>
      <li Class="HediffCompProperties_Disappears">
        <disappearsAfterTicks>135</disappearsAfterTicks>
        <showRemainingTime>true</showRemainingTime>
      </li>
      <li Class="HediffCompProperties_DisappearsOnDeath" />
      <li Class="HediffCompProperties_Invisibility">
        <visibleToPlayer>true</visibleToPlayer>
        <fadeDurationTicks>15</fadeDurationTicks>
        <recoverFromDisruptedTicks>90</recoverFromDisruptedTicks>
      </li>
    </comps>
  </HediffDef>

  <!-- Impostor Hediffs -->
  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_InfiltratorBrainShock</defName>
    <label>brain shock?</label>
    <labelNoun>a brain shock?</labelNoun>
    <description>After-effects of an electrical shock to the brain. This is generally caused by feedback from brain implants hit by EMP pulses. With full-body spasms and limbs bending at unnatural angles, this one's symptoms seem unusually severe. Perhaps a medical examination is in order.</description>
    <initialSeverity>1</initialSeverity>
    <comps>
      <li Class="HediffCompProperties_SeverityPerDay">
        <severityPerDay>-8</severityPerDay>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_HediffsOnRemoval">
        <hediffsToGive>
          <li>
            <hediffDef>IM_DeactivatedInfiltrator</hediffDef>
          </li>
        </hediffsToGive>
        <validSeverity>0.02</validSeverity>
      </li>
    </comps>
    <stages>
      <li>
        <capMods>
          <li>
            <capacity>Consciousness</capacity>
            <setMax>0.1</setMax>
          </li>
        </capMods>
      </li>
    </stages>
  </HediffDef>

  <RecipeDef>
    <defName>IM_DeactivateInfiltrator</defName>
    <uiIconPath>UI/Icons/DeactivateInfiltrator</uiIconPath>
    <effectWorking>Repair</effectWorking>
    <workerClass>Recipe_RemoveHediff</workerClass>
    <workSpeedStat>GeneralLaborSpeed</workSpeedStat>
    <workSkill>Crafting</workSkill>
    <workSkillLearnFactor>24</workSkillLearnFactor>
    <label>deactivate infiltrator</label>
    <description>Deactivate an infiltrator.</description>
    <jobString>Deactivating infiltrator.</jobString>
    <workAmount>850</workAmount>
    <hideBodyPartNames>true</hideBodyPartNames>
    <isViolation>false</isViolation>
    <targetsBodyPart>false</targetsBodyPart>
    <removesHediff>IM_InfiltratorBrainShock</removesHediff>
    <successfullyRemovedHediffMessage>{0} has successfully deatcivated an infiltrator masquerading as {1}.</successfullyRemovedHediffMessage>
    <skillRequirements>
      <Crafting>3</Crafting>
    </skillRequirements>
  </RecipeDef>

  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_DeactivatedInfiltrator</defName>
    <label>deactivated infiltrator</label>
    <description>You shouldn't be able to read this outside devmode.</description>
    <isBad>false</isBad>
    <everCurableByItem>false</everCurableByItem>
    <scenarioCanAdd>false</scenarioCanAdd>
    <initialSeverity>1</initialSeverity>
    <lethalSeverity>1</lethalSeverity>
    <tendable>false</tendable>
    <comps>
      <li Class="EBSGFramework.HediffCompProperties_SpawnPawnKindOnRemoval">
        <pawnKind>IM_Mech_Infiltrator</pawnKind>
        <inCreatorFaction>false</inCreatorFaction>
        <hediffOnPawns>IM_KillInfiltrator</hediffOnPawns>
        <effecter>IM_DisguiseDisintegration</effecter>
        <spawnEffecter>IM_InfiltratorReveal</spawnEffecter>
        <attachEffecterToPawn>true</attachEffecterToPawn>
      </li>
      <li Class="EBSGFramework.HediffCompProperties_DestroyOnDeath">
        <extraDeathSound>IM_Pawn_Infiltrator_Death</extraDeathSound>
      </li>
      <li Class="HediffCompProperties_DisappearsOnDeath"/>
      <li Class="EBSGFramework.HediffCompProperties_PreventDeathNotifications"/>
    </comps>
    <stages>
      <li>
        <becomeVisible>false</becomeVisible>
      </li>
    </stages>
  </HediffDef>

  <HediffDef>
    <hediffClass>HediffWithComps</hediffClass>
    <defName>IM_KillInfiltrator</defName>
    <label>kill infiltrator</label>
    <description>You shouldn't be able to read this outside devmode.</description>
    <isBad>false</isBad>
    <everCurableByItem>false</everCurableByItem>
    <scenarioCanAdd>false</scenarioCanAdd>
    <initialSeverity>1</initialSeverity>
    <lethalSeverity>1</lethalSeverity>
    <tendable>false</tendable>
    <comps>
      <li Class="HediffCompProperties_DisappearsOnDeath"/>
    </comps>
    <stages>
      <li>
        <becomeVisible>false</becomeVisible>
      </li>
    </stages>
  </HediffDef>

  <!--== Effects ==-->
  
  <!-- Infiltrator Reveal -->
  <FleckDef ParentName="FleckBase_Thrown">
    <defName>IM_AcidSplash</defName>
    <graphicData>
      <texPath>Things/Mote/ToxicDamage</texPath>
      <renderInstanced>true</renderInstanced>
    </graphicData>
    <altitudeLayer>MoteOverhead</altitudeLayer>
    <fadeInTime>0.1</fadeInTime>
    <solidTime>0.2</solidTime>
    <fadeOutTime>0.3</fadeOutTime>
  </FleckDef>

  <ThingDef ParentName="MoteBase">
    <defName>IM_RevealFlash</defName>
    <thingClass>MoteAttached</thingClass>
    <altitudeLayer>MoteOverhead</altitudeLayer>
    <mote>
      <fadeInTime>0.01</fadeInTime>
      <solidTime>0</solidTime>
      <fadeOutTime>0.03</fadeOutTime>
    </mote>
    <graphicData>
      <texPath>Things/Mote/BrightFlash</texPath>
      <shaderType>MoteGlow</shaderType>
      <color>(1, 0, 0, 1)</color>
    </graphicData>
  </ThingDef>

  <EffecterDef>
    <defName>IM_DisguiseDisintegration</defName>
    <maintainTicks>60</maintainTicks>
    <children>
      <li>
        <subEffecterClass>SubEffecter_SoundTriggered</subEffecterClass>
        <soundDef>IM_DisguiseDisintegration</soundDef>
      </li>
      <li>
        <subEffecterClass>SubEffecter_SprayerTriggered</subEffecterClass>
        <moteDef>IM_RevealFlash</moteDef>
        <burstCount>1</burstCount>
        <spawnLocType>OnSource</spawnLocType>
        <attachToSpawnThing>true</attachToSpawnThing>
      </li>
      <li>
        <subEffecterClass>SubEffecter_SprayerTriggered</subEffecterClass>
        <fleckDef>IM_AcidSplash</fleckDef>
        <burstCount>10~12</burstCount>
        <spawnLocType>OnSource</spawnLocType>
        <positionRadius>.5</positionRadius>
        <positionOffset>(0, 0, 0)</positionOffset>
        <color>(0.1,0.8,0.26,1)</color>
        <scale>0.6~0.8</scale>
        <angle>0~360</angle>
        <fleckUsesAngleForVelocity>True</fleckUsesAngleForVelocity>
        <absoluteAngle>false</absoluteAngle>
        <rotationRate>30~50</rotationRate>
        <rotation>0</rotation>
        <speed>-3~3</speed>
      </li>
      <li>
        <subEffecterClass>SubEffecter_SprayerTriggered</subEffecterClass>
        <fleckDef>IM_BloodChurnNoise</fleckDef>
        <burstCount>10~12</burstCount>
        <spawnLocType>OnSource</spawnLocType>
        <positionRadius>.5</positionRadius>
        <positionOffset>(0, 0, 0)</positionOffset>
        <scale>0.4~0.6</scale>
        <angle>0~360</angle>
        <fleckUsesAngleForVelocity>True</fleckUsesAngleForVelocity>
        <absoluteAngle>false</absoluteAngle>
        <rotationRate>30~50</rotationRate>
        <rotation>0</rotation>
        <speed>-3~3</speed>
      </li>
    </children>
  </EffecterDef>

  <ThingDef ParentName="MoteBase">
    <defName>IM_RevealGlow</defName>
    <thingClass>MoteAttached</thingClass>
    <altitudeLayer>MoteOverhead</altitudeLayer>
    <mote>
      <fadeInTime>0.1</fadeInTime>
      <solidTime>0</solidTime>
      <fadeOutTime>0.85</fadeOutTime>
    </mote>
    <graphicData>
      <graphicClass>Graphic_PawnBodySilhouette</graphicClass>
      <color>(0.8, 0, 0, 1)</color>
      <shaderType>MoteGlow</shaderType>
      <texPath>Things/Mote/Transparent</texPath>
    </graphicData>
  </ThingDef>
  
  <EffecterDef>
    <defName>IM_InfiltratorReveal</defName>
    <children>
      <li>
        <subEffecterClass>SubEffecter_SprayerTriggered</subEffecterClass>
        <moteDef>IM_RevealGlow</moteDef>
        <burstCount>1</burstCount>
        <spawnLocType>OnSource</spawnLocType>
        <attachToSpawnThing>true</attachToSpawnThing>
      </li>
    </children>
  </EffecterDef>
  
  <!-- Impostor Effects -->
  <FleckDef ParentName="FleckBase_Thrown">
    <defName>IM_RadioWaves</defName>
    <growthRate>1</growthRate>
    <useAttachLink>true</useAttachLink>
    <graphicData>
      <texPath>Things/Mote/RadioWaves</texPath>
      <shaderType>Mote</shaderType>
      <graphicClass>Graphic_Fleck</graphicClass>
      <renderInstanced>false</renderInstanced>
      <color>(1, 1, 1, 1)</color>
      <drawSize>(1, 1)</drawSize>
    </graphicData>
    <altitudeLayer>MoteOverhead</altitudeLayer>
    <fadeInTime>0</fadeInTime>
    <solidTime>0.1</solidTime>
    <fadeOutTime>0.2</fadeOutTime>
  </FleckDef>

  <EffecterDef>
    <defName>IM_RadioWaves</defName>
    <offsetMode>Free</offsetMode>
    <children>
      <li>
        <subEffecterClass>SubEffecter_SprayerChance</subEffecterClass>
        <fleckDef>IM_RadioWaves</fleckDef>
        <chancePerTick>0.0005</chancePerTick>
        <burstCount>1</burstCount>
        <spawnLocType>OnSource</spawnLocType>
        <positionRadius>0</positionRadius>
        <scale>1</scale>
        <positionOffset>(0, 0, 0.55)</positionOffset>
        <rotation>-2~2</rotation>
        <rotationRate>0</rotationRate>
        <absoluteAngle>True</absoluteAngle>
        <fleckUsesAngleForVelocity>false</fleckUsesAngleForVelocity>
        <speed>0</speed>
      </li>
    </children>
  </EffecterDef>

</Defs>